Créations de personas:
P0 : créateur du site
P1 : administrateur
P2: le visiteur qui a pas de compte
P3 : le visiteur qui a créé un compte et qui est connecté (le compte privé)
P4 : influenceur (le compte public)


Création de stories pour les personas:

Pour P0 :  Veut pouvoir élever le pouvoir d’un utilisateur vers admin

Pour P1 : Veut pouvoir voir toutes les publications. Veut pouvoir censurer un post. Dans la censure est compris la non-visibilité des commentaires pour tous et la suppression de la publication. 

Pour P2 : Veut pouvoir voir des publications de personnes (P4) mais ne peut pas les commenter. Veut pouvoir s’inscrire et se connecter. 

Pour P3 : Veut pouvoir poster des publications. Veut pouvoir commenter sa publication et celle des autres auquel il est abonné. Veut pouvoir s’abonner à d'autres utilisateurs. Veut pouvoir filtrer les demandes d’amis (accepter ou refuser). Veut pouvoir voir toute les publications de P4 mais ne peut les commenter que s'il est abonné. Veut pouvoir supprimer ses publications et/ou ses commentaires. Veut pouvoir supprimer son compte.

Pour P4 : Veut pouvoir publier et que tout le monde puisse voir ses publications (P2 et P3 et P4). Veut pouvoir commenter sa publication et celle des autres auquel il est abonné. Veut pouvoir supprimer ses publications et/ou ses commentaires. Veut pouvoir supprimer son compte. Veut pouvoir s’abonner à d’autres utilisateurs (P3 et P4). 

Item01 : création de la base de données.
	ProjetRJ.sql 												FAIT

Item02 : création des données de test.
	creation_test_utilisateur.sql								FAIT
	creation_test_publication.sql								FAIT	ps_creer_publication										FAIT
	creation_test_relation.sql									FAIT	ps_creer_abonnement											FAIT
	creation_test_commentaire_sur_publication.sql				FAIT

	test_utilisateur.php										FAIT
	test_admin.php												FAIT


Item03 : création des procédures stockées pour consulter les publications.
	ps_voir_publications_prive_public.sql 						FAIT
	ps_voir_publications_admin.sql								FAIT
	ps_voir_publications_visiteur.sql							FAIT
	ps_voir_publications_profil.sql (sur la page de profil)		FAIT
	ps_voir_publications.sql 
	(permet de savoir quel procédure on envoie en fonction du pouvoir de l'utilisateur)		FAIT

Item04 : récupérer les commentaires des publications.
	ps_voir_commentaires.sql									FAIT
	//le visiteur n'a pas acces aux commentaires

Item05 : chercher des gens pour faire des nouvelles relations
	ps_voir_nouveaux_amis.sql									FAIT

Item06 : s'abonner à un influenceur : un influenceur accepte tout le monde et ne peut refuser personne
	ps_creer_abonnement.sql										FAIT

Item07 : faire une demande d'ami
	ps_creer_demande_ami.sql									FAIT

Item08 : accepter une demande d'ami
	ps_creer_acceptation_ami.sql								FAIT

Item09 : refuser une demande d'ami
	ps_supprimer_demande_ami.sql								FAIT

Item10 : voir mon compte sur ProjetRJ (mes données)
	ps_voir_mon_profil.sql										FAIT

Item11 : supprimer mon compte
	ps_supprimer_mon_profil.sql									A FAIRE

Item12 : se connecter au réseau social
	on va réutiliser ps_voir_fiche_adresse_mail.sql (Item16)
	connexion.php (formulaire de connexion)						FAIT
	connexion_verification.php (validation avec mdp crypté) 	FAIT
	bdd.php (informations de connexion à la base)				FAIT
	
Item13 : se déconnecter au réseau social
	deconnexion.php												FAIT					

Item14 : commenter une publication
	ps_creer_commentaire.sql									FAIT

Item15 : voir ma fiche personelle
	ps_voir_fiche_adresse_mail.sql								FAIT

Item16 : voir la liste de mes relations
	ps_voir_amis.sql											FAIT

Item17 : voir mes demandes en attente
	ps_voir_attentes.sql										FAIT

Item18 : ajouter en ami 
	ps_ajouter_ami.sql											FAIT

Item19 : créer une publication
	ps_creer_publication.sql									FAIT

Item20 : voir de futurs nouveaux amis
	ps_voir_nouveaux_amis.sql									FAIT

Item21 : créer une vue amis
	vue_amis.sql 												FAIT

Item22 : supprimer une publication
	ps_supprimer_publication.sql 								A FAIRE
	Modifier la page profil de l'admin pour afficher toute les publications publiée (ps_voir_publications_profil).
	Ajouter le bouton supprimer qui va poster l'id_publication.
	Ecrire le traitement de suppression qui appelle la ps_supprimer_publication.
	Retour vers la page profil.

Item23 : notification du nombre de demandes en attentes pour le pseudonyme donné
	select count(*)
	from t_utilisateur_relation r
	join t_utilisateur u on (r.id_utilisateur_repondant = u.id_utilisateur)
	where u.pseudonyme = p_pseudonyme
	and r.relation = 'attente';

Item24 : voir nombres d'abonnés dans profil
	select count(*)
	from vue_amis a
	join t_utilisateur u on (a.id_utilisateur = u.id_utilisateur)
	where u.pseudonyme = p_pseudonyme;
